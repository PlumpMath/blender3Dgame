#import random.py


TAKEN = "+"
FREE = " "
START = "S"
FINISH = "F"


class Maze:
	sectors = 0
	sectorWidth = 0
	sectorHeight = 0
	
	maze = {}
	rows = 0
	cols = 0
	
	start = (0, 0)
	startCount = 0
	
	end = (0, 0)
	endCount = 0
	maxEndCount = 1
	
	
	def initMazeWithTemplate(self):
		self.sectors = 3
		self.sectorWidth = 5
		self.sectorHeight = 5
		self.finishCount = 0
		self.maxFinishCount = 1
		self.startCount = 0
		
		self.initRandomMazeTemplate(self.sectors, self.sectorWidth, self.sectorHeight)
		
	
	
	def initRandomMazeTemplate (self, sectors, sectorWidth, sectorHeight):
		self.sectors = sectors
		self.sectorWidth = sectorWidth
		self.sectorHeight = sectorHeight
		self.maze = {}
		
		self.rows = (self.sectors * (self.sectorWidth * 2)) - 1
		self.cols = (self.sectors * (self.sectorHeight * 2)) - 1
		
		# Create default maze
		for row in range(0, self.rows):
			for col in range(0, self.cols):
				if (row % 2 == 0) and (col % 2 == 0):
					self.maze[(row, col)] = TAKEN
				else:
					self.maze[(row, col)] = FREE
	

	
	# Set Start and Finish
	def setStart (self, coord_start):
		if self.startCount > 0:
			for tile in maze:
				if tile == START:
					tile = TAKEN

		self.maze[coord_start] = START
		self.startCount += 1

	def setFinish (self, coord_finish):
		if self.maxFinishCount > 0 and self.finishCount < self.maxFinishCount:
			self.maze[coord_finish] = FINISH
			self.finishCount += 1

	def setMaxFinishCount (self, maxFinishCount):
		self.maxFinishCount = maxFinishCount


	def printMaze(self):
		for row in range(0, self.rows):
			for col in range(0, self.cols):
				print self.maze[(row, col)],
			print



if __name__ == '__main__':
	simpleMaze = Maze()
	simpleMaze.initMazeWithTemplate()

	coord_start = (0, 0)
	coord_finish = (10, 10)
		
	simpleMaze.setStart(coord_start)

	
	simpleMaze.setFinish(coord_finish)

	simpleMaze.printMaze()
